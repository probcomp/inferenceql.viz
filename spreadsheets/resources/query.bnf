select = <'SELECT'> <ws> what <ws> from (<ws> where)? (<ws> limit)?
what = paren-selectable (<','> <ws> paren-selectable)*
from = <'FROM'> <ws> (source | (<'('> source <')'>))
where = <'WHERE'> <ws> predicate
limit = <'LIMIT'> <ws> nat

<source> = generate | from-table

<paren-selectable> = selectable | <'('> selectable <')'>
<selectable> = result-column | probability

predicate = result-column comparator (result-column | value)
comparator = equals | does-not-equal
<equals> = '='
<does-not-equal> = '!='

probability = <'PROBABILITY'> <ws> of <ws> given <ws> using
of = <'OF'> <ws> events
given = <'GIVEN'> <ws> events
using = <'USING'> <ws> model

from-table = table
generate = <'GENERATE'> <ws> generated (<ws> given)? <ws> using
generated = qualified-variable (<','> <ws> qualified-variable)*

events = event (<ws>? <','> <ws>? event)*
event = qualified-variable <ws>? <equals> <ws>? value

result-column = (table <'.'>)? column
column = symbol | string

qualified-variable = model <'.'> variable
variable =  symbol | string

model = symbol | string
table = symbol | string

<value> = string | nat | float | int | null
null = 'NULL' | 'null'
symbol = #'[a-zA-Z]\w*'
string = #'\"([^\"]+)\"'
nat = #'\d+'
float = #'-?\d+\.\d+(E-?\d+)?'
int = #'-?\d+'

ws = #'\s+'
