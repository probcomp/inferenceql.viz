["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$console",["^ ","~$error",["^ "]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$inferdb.spreadsheets.events.interceptors","~:imports",null,"~:requires",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$expound.alpha","^>","~$rf","~$re-frame.core","~$db","~$inferdb.spreadsheets.db","~$s","^=","^B","^B","~$expound","^>","^=","^=","^@","^@"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$check-and-throw",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/joshua/projects/inferenceql/spreadsheets/src/inferdb/spreadsheets/events/interceptors.cljs","~:line",7,"~:column",7,"~:end-line",7,"~:end-column",22,"~:arglists",["~#list",["~$quote",["^P",[["^A","~$a-spec"]]]]],"~:doc","Throws an exception if `db` doesn't match the Spec `a-spec`."],"^8","~$inferdb.spreadsheets.events.interceptors/check-and-throw","^J","/home/joshua/projects/inferenceql/spreadsheets/src/inferdb/spreadsheets/events/interceptors.cljs","^N",22,"~:method-params",["^P",[["^A","^R"]]],"~:protocol-impl",null,"~:arglists-meta",["^P",[null,null]],"^L",1,"~:variadic?",false,"^K",7,"~:ret-tag","~$clj-nil","^M",7,"~:max-fixed-arity",2,"~:fn-var",true,"^O",["^P",["^Q",["^P",[["^A","^R"]]]]],"^S","Throws an exception if `db` doesn't match the Spec `a-spec`."],"~$check-spec",["^ ","^8","~$inferdb.spreadsheets.events.interceptors/check-spec","^J","/home/joshua/projects/inferenceql/spreadsheets/src/inferdb/spreadsheets/events/interceptors.cljs","^K",15,"^L",1,"^M",15,"^N",16,"^I",["^ ","^J","/home/joshua/projects/inferenceql/spreadsheets/src/inferdb/spreadsheets/events/interceptors.cljs","^K",15,"^L",6,"^M",15,"^N",16],"~:tag","~$any"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$s","^=","^=","^=","^<","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^7",["~:inferdb.spreadsheets.db/db"]],"~:order",["^19"]],"^S",null]