#!/usr/bin/env clojure

(require '[inferdb.spreadsheets.build-data :as build])
(require '[clojure.data.csv :as csv])
(require '[clojure.java.io :as io])

(when (< (count *command-line-args*) 2)
  (do
    (println "Usage: build-data output-filename csv-data-filename")
    (System/exit 0)))

(defn clean-items [v]
  (cond

    ;; These are FIPS, we want them as strings
    (try (Integer/parseInt v) (catch Exception e))
    v

    ;; real vals
    (try (Float/parseFloat v) (catch Exception e)) (Float/parseFloat v)

    ;; empty strings
    (= v "") nil

    ;; anything else is identity
    :else v))

(defn fix-row [r]
  (doall
   (map clean-items r)))

(def csv-data
  (with-open [reader (io/reader (second *command-line-args*))]
    (doall
     (map
      fix-row
      (csv/read-csv reader)))))

(build/write-data csv-data (first *command-line-args*))
